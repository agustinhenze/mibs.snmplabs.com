#
# PySNMP MIB module IEEE8021-TSN-REMOTE-MANAGEMENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/tin/Dev/mibs.snmplabs.com/asn1/IEEE8021-TSN-REMOTE-MANAGEMENT-MIB
# Produced by pysmi-0.3.4 at Fri Jan 31 21:34:55 2020
# On host bier platform Linux version 5.4.0-3-amd64 by user tin
# Using Python version 3.7.6 (default, Jan 19 2020, 22:34:52) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
ieee8021BridgeBasePort, ieee8021BridgeTrafficClass, ieee8021BridgeBaseComponentId = mibBuilder.importSymbols("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePort", "ieee8021BridgeTrafficClass", "ieee8021BridgeBaseComponentId")
ieee8021QBridgeVlanIndex, = mibBuilder.importSymbols("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanIndex")
IEEE8021BridgePortNumber, ieee802dot1mibs = mibBuilder.importSymbols("IEEE8021-TC-MIB", "IEEE8021BridgePortNumber", "ieee802dot1mibs")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
ModuleIdentity, Unsigned32, Integer32, iso, IpAddress, Counter64, Counter32, Bits, MibIdentifier, TimeTicks, Gauge32, NotificationType, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Unsigned32", "Integer32", "iso", "IpAddress", "Counter64", "Counter32", "Bits", "MibIdentifier", "TimeTicks", "Gauge32", "NotificationType", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, TruthValue, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString", "RowStatus")
ieee8021TsnRemoteMgmtMib = ModuleIdentity((1, 3, 111, 2, 802, 1, 1, 32))
ieee8021TsnRemoteMgmtMib.setRevisions(('2018-10-04 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMib.setRevisionsDescriptions(('Initial revision, included in IEEE 802.1Qcc-2018',))
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMib.setLastUpdated('201810040000Z')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMib.setOrganization('IEEE 802.1 Working Group')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMib.setContactInfo(' WG-URL: http://ieee802.org/1/ WG-EMail: STDS-802-1-L@IEEE.ORG Contact: IEEE 802.1 Working Group Chair Postal: C/O IEEE 802.1 Working Group IEEE Standards Association 445 Hoes Lane Piscataway NJ 08854 USA E-mail: STDS-802-1-L@IEEE.ORG')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMib.setDescription('The Bridge MIB module for managing devices that support the IEEE Std 802.1Q Stream Reservation Protocol Enhancements and Performance Improvements. Unless otherwise indicated, the references in this MIB module are to IEEE Std 802.1Q. Copyright (C) IEEE (2018). This version of this MIB module is part of IEEE802.1Q; see the draft itself for full legal notices.')
ieee8021TsnRemoteMgmtNotifications = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 32, 0))
ieee8021TsnRemoteMgmtObjects = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 32, 1))
ieee8021TsnRemoteMgmtConformance = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 32, 2))
ieee8021TsnRemoteMgmtBridgeDelay = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 32, 1, 1))
ieee8021TsnRemoteMgmtPropagationDelay = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 32, 1, 2))
ieee8021TsnRemoteMgmtStaticTrees = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 32, 1, 3))
ieee8021TsnRemoteMgmtMrpExternalControl = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 32, 1, 4))
ieee8021TsnRemoteMgmtBridgeDelayTable = MibTable((1, 3, 111, 2, 802, 1, 1, 32, 1, 1, 1), )
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtBridgeDelayTable.setReference('12.32.1')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtBridgeDelayTable.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtBridgeDelayTable.setDescription("A table containing a set of parameters necessary to determine the delay of frames as they pass through the Bridge's relay. There is one Bridge Delay managed object per Port pair of a Bridge component. The Port pair consists of three indices, an ingress Port followed by an egress Port and a traffic class associated with the Port pair.")
ieee8021TsnRemoteMgmtBridgeDelayEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 32, 1, 1, 1, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBaseComponentId"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeTrafficClass"), (0, "IEEE8021-TSN-REMOTE-MANAGEMENT-MIB", "ieee8021TsnRemoteMgmtBridgeIngressPort"), (0, "IEEE8021-TSN-REMOTE-MANAGEMENT-MIB", "ieee8021TsnRemoteMgmtBridgeEgressPort"))
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtBridgeDelayEntry.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtBridgeDelayEntry.setDescription("A list of objects containing information necessary to determine the delay of frames as they pass through the Bridge's relay.")
ieee8021TsnRemoteMgmtBridgeIngressPort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 32, 1, 1, 1, 1, 1), IEEE8021BridgePortNumber())
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtBridgeIngressPort.setReference('...')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtBridgeIngressPort.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtBridgeIngressPort.setDescription('...')
ieee8021TsnRemoteMgmtBridgeEgressPort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 32, 1, 1, 1, 1, 2), IEEE8021BridgePortNumber())
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtBridgeEgressPort.setReference('...')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtBridgeEgressPort.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtBridgeEgressPort.setDescription('...')
ieee8021TsnRemoteMgmtIndependentDelayMin = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 32, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtIndependentDelayMin.setReference('12.32.1.1')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtIndependentDelayMin.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtIndependentDelayMin.setDescription('This attribute provides the minimum delay independent from frame length for a frame to forward from ingress port to egress port. The delay begins when the message timestamp point of the ingress frame passes the reference plane marking the boundary between the network media and PHY. The delay ends when the message timestamp point of the egress frame passes the reference plane marking the boundary between the network media and PHY. The message timestamp point is specified by IEEE Std 802.1AS for various media, near the start of the frame. Note: This delay includes all aspects of length-independent delay for a frame that is forwarded, including handling of error conditions.')
ieee8021TsnRemoteMgmtIndependentDelayMax = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 32, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtIndependentDelayMax.setReference('12.32.1.1')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtIndependentDelayMax.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtIndependentDelayMax.setDescription('This attribute provides the maximum delay independent from frame length for a frame to forward from ingress port to egress port. The delay begins when the message timestamp point of the ingress frame passes the reference plane marking the boundary between the network media and PHY. The delay ends when the message timestamp point of the egress frame passes the reference plane marking the boundary between the network media and PHY. The message timestamp point is specified by IEEE Std 802.1AS for various media, near the start of the frame.')
ieee8021TsnRemoteMgmtDependentDelayMin = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 32, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtDependentDelayMin.setReference('12.32.1.2')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtDependentDelayMin.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtDependentDelayMin.setDescription('This attribute provides the minimum length-dependent delay from ingress port to egress port. It provides the portion of delay that is dependent on frame length, where frame length is the number of octets that transfer across the MAC Service interfaces. Each length-dependent delay attribute specifies the time for a single octet of the frame to transfer from ingress to egress.')
ieee8021TsnRemoteMgmtDependentDelayMax = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 32, 1, 1, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtDependentDelayMax.setReference('12.32.1.2')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtDependentDelayMax.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtDependentDelayMax.setDescription('This attribute provides the maximum length-dependent delay from ingress port to egress port. It provides the portion of delay that is dependent on frame length, where frame length is the number of octets that transfer across the MAC Service interfaces. Each length-dependent delay attribute specifies the time for a single octet of the frame to transfer from ingress to egress.')
ieee8021TsnRemoteMgmtPropagationDelayTable = MibTable((1, 3, 111, 2, 802, 1, 1, 32, 1, 2, 1), )
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtPropagationDelayTable.setReference('12.32.2')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtPropagationDelayTable.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtPropagationDelayTable.setDescription('A table containing a set of parameters necessary to determine the delay along the network media (e.g. cable) for a frame transmitted from the specifed Port of this Bridge to the neighboring Port on a different Bridge. There is one Propagation Delay managed object per egress Port of a Bridge.')
ieee8021TsnRemoteMgmtPropagationDelayEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 32, 1, 2, 1, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePort"))
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtPropagationDelayEntry.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtPropagationDelayEntry.setDescription('A list of objects containing information necessary to determine the delay along the network media (e.g. cable) for a frame transmitted from the specifed Port of this Bridge to the neighboring Port on a different Bridge.')
ieee8021TsnRemoteMgmtTxPropagationDelay = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 32, 1, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtTxPropagationDelay.setReference('12.32.2.1')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtTxPropagationDelay.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtTxPropagationDelay.setDescription("This attribute provides the transmission propagation delay. The propagation delay begins when the message timestamp point of an egress frame passes the reference plane marking the boundary between the network media and PHY. It ends when the message timestamp point of an ingress frame on the neighboring Bridge's Port passes the reference plane marking the boundary between the network media and PHY. The message timestamp point is specified by IEEE Std 802.1AS for various media.")
ieee8021TsnRemoteMgmtStaticTreesSupported = MibScalar((1, 3, 111, 2, 802, 1, 1, 32, 1, 3, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtStaticTreesSupported.setReference('12.32.3.1')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtStaticTreesSupported.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtStaticTreesSupported.setDescription('This attribute is used by the TSN CNC to determine that TE-MSTID is supported by the Bridge.')
ieee8021TsnRemoteMgmtMsrpMrpExternalControlTable = MibTable((1, 3, 111, 2, 802, 1, 1, 32, 1, 4, 1), )
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMsrpMrpExternalControlTable.setReference('12.32.4')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMsrpMrpExternalControlTable.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMsrpMrpExternalControlTable.setDescription('A table containing a set of parameters necessary for a network manager to 1) disable MRP attribute propagation (MAP) for the MRP Participant of a bridge port, 2) read MRP attribute registrations that the MRP Participant receives, and 3) write MRP attribute values for the MRP Participant to declare.')
ieee8021TsnRemoteMgmtMsrpMrpExternalControlEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 32, 1, 4, 1, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBaseComponentId"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePort"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanIndex"))
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMsrpMrpExternalControlEntry.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMsrpMrpExternalControlEntry.setDescription('A list of objects necessary for a network manager to 1) disable MRP attribute propagation (MAP) for the MRP Participant of a bridge port, 2) read MRP attribute registrations that the MRP Participant receives, and 3) write MRP attribute values for the MRP Participant to declare.')
ieee8021TsnRemoteMgmtMsrpMrpExternalControl = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 32, 1, 4, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMsrpMrpExternalControl.setReference('12.32.4.1')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMsrpMrpExternalControl.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMsrpMrpExternalControl.setDescription("This attribute is used to indicate, whether MRP attributes are propagated on the MRP Participant, according to the specifications for MRP Attribute Propagation (MAP) and specifications of the MRP Application. When true(1), the MRP Participant is removed from the MRP Application's MAP Context. The MRP Participant performs all other aspects of MRP, including MRP operation, MRP specifications, and MRPDU encodings. The application component stores MAD indications for registration received on the Port, and invokes MAD requests for declarations on the Port. When false(2), MRP attributes propagate on the MRP Participant according to the specifications for MRP Attribute Propagation (MAP) and specifications of the MRP Application. Ports with the externalControl attribute false(2) are considered as candidates for the MRP Application's MAP Context. The remaining attributes of this subtree are ignored by Ports with the externalControl attribute false(2). This managed object applies to the MSRP application. A table is provided for each MAP Context (VLAN ID).")
ieee8021TsnRemoteMgmtMrpIndicationList = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 32, 1, 4, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpIndicationList.setReference('12.32.4.2')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpIndicationList.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpIndicationList.setDescription('This attribute is used to store the list of all joined MRP attributes for the MRP Participant when the ieee8021TsnRemoteMgmtMrpExternalControl attribute is true(1). When the ieee8021TsnRemoteMgmtMrpExternalControl attribute is false(2), this attribute is ignored by the MRP Participant, and returns the empty octet string.')
ieee8021TsnRemoteMgmtMrpIndicationListLength = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 32, 1, 4, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpIndicationListLength.setReference('12.32.4.3')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpIndicationListLength.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpIndicationListLength.setDescription('This attribute is used to provide the number of octets in the ieee8021TsnRemoteMgmtMrpIndicationListLength attribute. When the ieee8021TsnRemoteMgmtMrpExternalControl attribute is false(2), this attribute returns zero.')
ieee8021TsnRemoteMgmtMrpIndicationChangeCounter = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 32, 1, 4, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpIndicationChangeCounter.setReference('12.34.4.4')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpIndicationChangeCounter.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpIndicationChangeCounter.setDescription('This attribute is used to provide the number of changes done to the ieee8021TsnRemoteMgmtMrpIndicationList. When the ieee8021TsnRemoteMgmtMrpExternalControl attribute is false(2), this attribute returns zero.')
ieee8021TsnRemoteMgmtMrpAdminRequestList = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 32, 1, 4, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpAdminRequestList.setReference('12.32.4.5')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpAdminRequestList.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpAdminRequestList.setDescription('This attribute is used to provide the administrative value of the current list of MAD requests for the MRP Participant (operRequestList). Each entry in this attribute is encoded as the attribute_type parameter as a single octet, followed by the length of the attribute_value parameter as a single octet, followed by a sequence of octets for the attribute_value parameter. When the ieee8021TsnRemoteMgmtMrpExternalControl attribute is true(1), this attribute is copied to the ieee8021TsnRemoteMgmtMrpOperRequestList attribute as soon as possible according to the implementation. When the ieee8021TsnRemoteMgmtMrpExternalControl attribute is false(2), this attribute is ignored by the MRP Participant, but it retains its value.')
ieee8021TsnRemoteMgmtMrpAdminRequestListLength = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 32, 1, 4, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpAdminRequestListLength.setReference('12.32.4.6')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpAdminRequestListLength.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpAdminRequestListLength.setDescription('This attribute is used to provide the administrative value for the number of octets in the ieee8021TsnRemoteMgmtMrpAdminRequestList attribute. When the ieee8021TsnRemoteMgmtMrpExternalControl attribute is true(1), this attribute is copied to the ieee8021TsnRemoteMgmtMrpOperRequestListLength attribute at the same time that the ieee8021TsnRemoteMgmtMrpAdminRequestList attribute is copied to the ieee8021TsnRemoteMgmtMrpOperRequestList attribute. When the ieee8021TsnRemoteMgmtMrpExternalControl attribute is false(2), this attribute is ignored by the MRP Participant, but it retains its value.')
ieee8021TsnRemoteMgmtMrpOperRequestList = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 32, 1, 4, 1, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpOperRequestList.setReference('12.32.4.7')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpOperRequestList.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpOperRequestList.setDescription('This attribute is used to proivde the operational value of the current list of MAD requests for the MRP Participant.')
ieee8021TsnRemoteMgmtMrpOperRequestListLength = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 32, 1, 4, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpOperRequestListLength.setReference('12.32.4.8')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpOperRequestListLength.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpOperRequestListLength.setDescription('This attribute is used to provide the operational value of the ieee8021TsnRemoteMgmtMrpAdminRequestListLength attribute, and it is copied at the same time that ieee8021TsnRemoteMgmtMrpAdminRequestList attribute is copied to ieee8021TsnRemoteMgmtMrpOperRequestList.')
ieee8021TsnRemoteMgmtCompliances = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 32, 2, 1))
ieee8021TsnRemoteMgmtGroups = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 32, 2, 2))
ieee8021TsnRemoteMgmtBridgeDelayGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 32, 2, 2, 1)).setObjects(("IEEE8021-TSN-REMOTE-MANAGEMENT-MIB", "ieee8021TsnRemoteMgmtIndependentDelayMin"), ("IEEE8021-TSN-REMOTE-MANAGEMENT-MIB", "ieee8021TsnRemoteMgmtIndependentDelayMax"), ("IEEE8021-TSN-REMOTE-MANAGEMENT-MIB", "ieee8021TsnRemoteMgmtDependentDelayMin"), ("IEEE8021-TSN-REMOTE-MANAGEMENT-MIB", "ieee8021TsnRemoteMgmtDependentDelayMax"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021TsnRemoteMgmtBridgeDelayGroup = ieee8021TsnRemoteMgmtBridgeDelayGroup.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtBridgeDelayGroup.setDescription("Objects that define the delay of frames as they pass through the Bridge's relay.")
ieee8021TsnRemoteMgmtPropagationDelayGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 32, 2, 2, 2)).setObjects(("IEEE8021-TSN-REMOTE-MANAGEMENT-MIB", "ieee8021TsnRemoteMgmtTxPropagationDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021TsnRemoteMgmtPropagationDelayGroup = ieee8021TsnRemoteMgmtPropagationDelayGroup.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtPropagationDelayGroup.setDescription('Objects that define delay of frames along the network media (e.g. cable).')
ieee8021TsnRemoteMgmtStaticTreesGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 32, 2, 2, 3)).setObjects(("IEEE8021-TSN-REMOTE-MANAGEMENT-MIB", "ieee8021TsnRemoteMgmtStaticTreesSupported"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021TsnRemoteMgmtStaticTreesGroup = ieee8021TsnRemoteMgmtStaticTreesGroup.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtStaticTreesGroup.setDescription('Objects that define static tree support.')
ieee8021TsnRemoteMgmtMrpExternalControlGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 32, 2, 2, 4)).setObjects(("IEEE8021-TSN-REMOTE-MANAGEMENT-MIB", "ieee8021TsnRemoteMgmtMsrpMrpExternalControl"), ("IEEE8021-TSN-REMOTE-MANAGEMENT-MIB", "ieee8021TsnRemoteMgmtMrpIndicationList"), ("IEEE8021-TSN-REMOTE-MANAGEMENT-MIB", "ieee8021TsnRemoteMgmtMrpIndicationListLength"), ("IEEE8021-TSN-REMOTE-MANAGEMENT-MIB", "ieee8021TsnRemoteMgmtMrpIndicationChangeCounter"), ("IEEE8021-TSN-REMOTE-MANAGEMENT-MIB", "ieee8021TsnRemoteMgmtMrpAdminRequestList"), ("IEEE8021-TSN-REMOTE-MANAGEMENT-MIB", "ieee8021TsnRemoteMgmtMrpAdminRequestListLength"), ("IEEE8021-TSN-REMOTE-MANAGEMENT-MIB", "ieee8021TsnRemoteMgmtMrpOperRequestList"), ("IEEE8021-TSN-REMOTE-MANAGEMENT-MIB", "ieee8021TsnRemoteMgmtMrpOperRequestListLength"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021TsnRemoteMgmtMrpExternalControlGroup = ieee8021TsnRemoteMgmtMrpExternalControlGroup.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtMrpExternalControlGroup.setDescription('Objects that define configuration of MRP External control.')
ieee8021TsnRemoteMgmtCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 32, 2, 1, 1)).setObjects(("IEEE8021-TSN-REMOTE-MANAGEMENT-MIB", "ieee8021TsnRemoteMgmtBridgeDelayGroup"), ("IEEE8021-TSN-REMOTE-MANAGEMENT-MIB", "ieee8021TsnRemoteMgmtPropagationDelayGroup"), ("IEEE8021-TSN-REMOTE-MANAGEMENT-MIB", "ieee8021TsnRemoteMgmtStaticTreesGroup"), ("IEEE8021-TSN-REMOTE-MANAGEMENT-MIB", "ieee8021TsnRemoteMgmtMrpExternalControlGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021TsnRemoteMgmtCompliance = ieee8021TsnRemoteMgmtCompliance.setStatus('current')
if mibBuilder.loadTexts: ieee8021TsnRemoteMgmtCompliance.setDescription('The compliance statement for devices supporting TSN Remote management. Support of the objects defined in the IEEE8021-TSN REMOTE MANAGEMENT MIB also requires support of the IEEE8021-BRIDGE-MIB; the provisions of 17.3.2 apply to implementations claiming support of the IEEE8021-TSN REMOTE MANAGEMENT MIB.')
mibBuilder.exportSymbols("IEEE8021-TSN-REMOTE-MANAGEMENT-MIB", PYSNMP_MODULE_ID=ieee8021TsnRemoteMgmtMib, ieee8021TsnRemoteMgmtStaticTreesSupported=ieee8021TsnRemoteMgmtStaticTreesSupported, ieee8021TsnRemoteMgmtPropagationDelayEntry=ieee8021TsnRemoteMgmtPropagationDelayEntry, ieee8021TsnRemoteMgmtMrpOperRequestListLength=ieee8021TsnRemoteMgmtMrpOperRequestListLength, ieee8021TsnRemoteMgmtBridgeDelayEntry=ieee8021TsnRemoteMgmtBridgeDelayEntry, ieee8021TsnRemoteMgmtPropagationDelayGroup=ieee8021TsnRemoteMgmtPropagationDelayGroup, ieee8021TsnRemoteMgmtMrpIndicationChangeCounter=ieee8021TsnRemoteMgmtMrpIndicationChangeCounter, ieee8021TsnRemoteMgmtBridgeEgressPort=ieee8021TsnRemoteMgmtBridgeEgressPort, ieee8021TsnRemoteMgmtCompliances=ieee8021TsnRemoteMgmtCompliances, ieee8021TsnRemoteMgmtMrpAdminRequestList=ieee8021TsnRemoteMgmtMrpAdminRequestList, ieee8021TsnRemoteMgmtMsrpMrpExternalControl=ieee8021TsnRemoteMgmtMsrpMrpExternalControl, ieee8021TsnRemoteMgmtIndependentDelayMin=ieee8021TsnRemoteMgmtIndependentDelayMin, ieee8021TsnRemoteMgmtMsrpMrpExternalControlTable=ieee8021TsnRemoteMgmtMsrpMrpExternalControlTable, ieee8021TsnRemoteMgmtStaticTreesGroup=ieee8021TsnRemoteMgmtStaticTreesGroup, ieee8021TsnRemoteMgmtMrpExternalControl=ieee8021TsnRemoteMgmtMrpExternalControl, ieee8021TsnRemoteMgmtMrpIndicationListLength=ieee8021TsnRemoteMgmtMrpIndicationListLength, ieee8021TsnRemoteMgmtMrpExternalControlGroup=ieee8021TsnRemoteMgmtMrpExternalControlGroup, ieee8021TsnRemoteMgmtDependentDelayMin=ieee8021TsnRemoteMgmtDependentDelayMin, ieee8021TsnRemoteMgmtBridgeIngressPort=ieee8021TsnRemoteMgmtBridgeIngressPort, ieee8021TsnRemoteMgmtPropagationDelayTable=ieee8021TsnRemoteMgmtPropagationDelayTable, ieee8021TsnRemoteMgmtBridgeDelayTable=ieee8021TsnRemoteMgmtBridgeDelayTable, ieee8021TsnRemoteMgmtBridgeDelayGroup=ieee8021TsnRemoteMgmtBridgeDelayGroup, ieee8021TsnRemoteMgmtNotifications=ieee8021TsnRemoteMgmtNotifications, ieee8021TsnRemoteMgmtMib=ieee8021TsnRemoteMgmtMib, ieee8021TsnRemoteMgmtMsrpMrpExternalControlEntry=ieee8021TsnRemoteMgmtMsrpMrpExternalControlEntry, ieee8021TsnRemoteMgmtMrpIndicationList=ieee8021TsnRemoteMgmtMrpIndicationList, ieee8021TsnRemoteMgmtTxPropagationDelay=ieee8021TsnRemoteMgmtTxPropagationDelay, ieee8021TsnRemoteMgmtDependentDelayMax=ieee8021TsnRemoteMgmtDependentDelayMax, ieee8021TsnRemoteMgmtConformance=ieee8021TsnRemoteMgmtConformance, ieee8021TsnRemoteMgmtBridgeDelay=ieee8021TsnRemoteMgmtBridgeDelay, ieee8021TsnRemoteMgmtPropagationDelay=ieee8021TsnRemoteMgmtPropagationDelay, ieee8021TsnRemoteMgmtGroups=ieee8021TsnRemoteMgmtGroups, ieee8021TsnRemoteMgmtStaticTrees=ieee8021TsnRemoteMgmtStaticTrees, ieee8021TsnRemoteMgmtCompliance=ieee8021TsnRemoteMgmtCompliance, ieee8021TsnRemoteMgmtIndependentDelayMax=ieee8021TsnRemoteMgmtIndependentDelayMax, ieee8021TsnRemoteMgmtMrpAdminRequestListLength=ieee8021TsnRemoteMgmtMrpAdminRequestListLength, ieee8021TsnRemoteMgmtObjects=ieee8021TsnRemoteMgmtObjects, ieee8021TsnRemoteMgmtMrpOperRequestList=ieee8021TsnRemoteMgmtMrpOperRequestList)
